import 'dart:async';

import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:places/blocs/add_place_screen/add_place/form_submission_status.dart';
import 'package:places/data/dto/place_dto.dart';
import 'package:places/data/interactor/place_interactor.dart';
import 'package:places/data/model/place_type.dart';
import 'package:places/ui/screen/res/strings.dart';

part 'add_place_event.dart';

part 'add_place_state.dart';

/// –±–ª–æ–∫ –¥–ª—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–µ—Å—Ç–∞
class AddPlaceBloc extends Bloc<AddPlaceEvent, AddPlaceState> {
  final PlaceInteractor _placeInteractor;

  AddPlaceBloc(this._placeInteractor) : super(AddPlaceState());

  @override
  Stream<AddPlaceState> mapEventToState(
    AddPlaceEvent event,
  ) async* {
    // –ø–æ–ª–µ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞, –º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
    if (event is FieldCategoryChanged) {
      yield state.copyWith(fieldCategory: event.fieldCategory);

      // –ø–æ–ª–µ –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ
    } else if (event is FieldNameChanged) {
      yield state.copyWith(fieldName: event.fieldName);

      // –ø–æ–ª–µ Lat –∏–∑–º–µ–Ω–µ–Ω–æ
    } else if (event is FieldLatChanged) {
      yield state.copyWith(fieldLat: event.fieldLat);

      // –ø–æ–ª–µ Lng –∏–∑–º–µ–Ω–µ–Ω–æ
    } else if (event is FieldLngChanged) {
      yield state.copyWith(fieldLng: event.fieldLng);

      // –ø–æ–ª–µ –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ
    } else if (event is FieldDescriptionChanged) {
      yield state.copyWith(fieldDescription: event.fieldDescription);
    } else if (event is FieldLatChanged) {
      yield state.copyWith(fieldLat: event.fieldLat);

      /// —Ñ–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
    } else if (event is FormSubmitted) {
      yield state.copyWith(formStatus: FormSubmitting());

      /// üòÄüòÄüòÄ todo –¥–µ–ª–∞—é! –ø–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ç–∞–∫ —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ —Ç–æ –ª–∏ —è –≤–æ–æ–±—â–µ –¥–µ–ª–∞—é
      print('state FormSubmitted');
      try {
        // todo —Ñ–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        _submitForm(state);

        yield state.copyWith(formStatus: SubmissionSuccess());
      } catch (e) {
        yield state.copyWith(formStatus: SubmissionFailed(e as Exception));
      }
    }
  }

  /// –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –°–æ–∑–¥–∞—Ç—å
  /// –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã
  Future<void> _submitForm(AddPlaceState state) async {
    /// TODO: –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ
    /// –≤—Ä–µ–º–µ–Ω–Ω–æ
    const _images = [
      'https://picsum.photos/1000/600?random=1',
      'https://picsum.photos/1000/600?random=2',
    ];

    /// —Å—é–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
    var selectedCategory;
    PlaceDto newPlace = PlaceDto(
      placeType: PlaceType.getCode(state.fieldCategory),
      name: state.fieldName,
      lat: double.tryParse(state.fieldLat) as double,
      lng: double.tryParse(state.fieldLng) as double,
      description: state.fieldDescription,
      urls: _images,
    );

      /// –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª—å TODO —É–¥–∞–ª–∏—Ç—å –ø–æ–∑–∂–µ
      print('''
        category: ${state.fieldCategory} ${PlaceType.getCode(state.fieldCategory)},
        name: ${state.fieldName},
        lat: ${state.fieldLat},
        lng: ${state.fieldLng},
        description: ${state.fieldDescription}
        ''');

    /// –∏ –ø–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∏–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    /// todo —Ä–∞—Å–∫–æ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å
    /// –∑–∞–∫–æ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª–∞ —á—Ç–æ–±—ã –Ω–µ —Å–æ—Ä–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    // placeInteractor.addNewPlace(newPlace);
  }
}

// todo –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–∞—é—â–∏–π –¥–∏–∞–ª–æ–≥ –Ω–∞ ui
