import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'package:places/data/api/api_client.dart';
import 'package:places/data/model/place.dart';
import 'package:places/data/model/search_filter.dart';
import 'package:places/data/repository/place_repository.dart';
import 'package:places/ui/screen/components/bottom_navigationbar.dart';
import 'package:places/ui/screen/res/sizes.dart';

/// —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
class TestBackend extends StatefulWidget {
  final String title = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤';

  @override
  _TestBackendState createState() => _TestBackendState();
}

class _TestBackendState extends State<TestBackend> {
  PlaceRepository _placeRepository;

  /// –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
  final _testId = 157;

  /// —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  /// [radius] –≤ –º–µ—Ç—Ä–∞—Ö
  final SearchFilter _filter = SearchFilter(
    radius: 10000.0,
    typeFilter: ['cafe', 'park', 'other'],
    searchWords: '–Ω–∞—Ç—é—Ä–º–æ—Ä—Ç',
  );

  /// —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ü–æ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
  final Place _testAdd = Place(
    lat: 55.737064,
    lng: 37.520018,
    name: '–¢–µ—Å—Ç',
    urls: [
      'https://picsum.photos/1000/600?random=1',
    ],
    placeType: 'other',
    description:
        '–°–ª–µ–¥—É–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ —Å–æ–∑–Ω–∞–Ω–∏—è —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑—É–º–∞ –Ω–∞–¥ —ç–º–æ—Ü–∏—è–º–∏. –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã –Ω–µ—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã: —Ä–∞–∑–±–∞–≤–ª–µ–Ω–Ω–æ–µ –∏–∑—Ä—è–¥–Ω–æ–π –¥–æ–ª–µ–π —ç–º–ø–∞—Ç–∏–∏, —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —É—Å–ª–æ–≤–∏–π –∞–∫—Ç–∏–≤–∏–∑–∞—Ü–∏–∏.',
  );

  final Place _testUpdate = Place(
    id: 139,
    lat: 55.737064,
    lng: 37.520018,
    name: '–¢–µ—Å—Ç 2 —É–¥–∞–ª–∏—Ç—å',
    urls: [
      'https://picsum.photos/1000/600?random=1',
    ],
    placeType: 'other',
    description:
        '–°–ª–µ–¥—É–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–≥–æ —Å–æ–∑–Ω–∞–Ω–∏—è —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑—É–º–∞ –Ω–∞–¥ —ç–º–æ—Ü–∏—è–º–∏. –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã –Ω–µ—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã: —Ä–∞–∑–±–∞–≤–ª–µ–Ω–Ω–æ–µ –∏–∑—Ä—è–¥–Ω–æ–π –¥–æ–ª–µ–π —ç–º–ø–∞—Ç–∏–∏, —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —É—Å–ª–æ–≤–∏–π –∞–∫—Ç–∏–≤–∏–∑–∞—Ü–∏–∏.',
  );

  @override
  void initState() {
    _placeRepository = PlaceRepository(ApiClient());

    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
        centerTitle: true,
        automaticallyImplyLeading: false,
      ),
      body: Center(
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            TextButton(
              child: Text('–§–∏–ª—å—Ç—Ä POST [/filtered_places]'),
              onPressed: () async {
                final response = await _placeRepository.getPlaces(_filter);
                print('UI –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–µ—Å—Ç (${response.length} —à—Ç.): $response');
              },
              style: TextButton.styleFrom(
                primary: Colors.white,
                backgroundColor: Color(0xff49CC90),
                minimumSize: Size(300, 48),
              ),
            ),
            sizedBoxH8,
            TextButton(
              child: Text('addNewPlace: POST [/place]'),
              onPressed: () async {
                await _placeRepository.addNewPlace(_testAdd);
              },
              style: TextButton.styleFrom(
                primary: Colors.white,
                backgroundColor: Color(0xff49CC90),
                minimumSize: Size(300, 48),
              ),
            ),
            sizedBoxH24,
            // TextButton( ‚ÄºÔ∏èü§ì —Å–∫—Ä—ã–ª–∞, —á—Ç–æ–±—ã —Å–ª—É—á–∞–π–Ω–æ –º–Ω–æ–≥–æ –ª–∏—à–Ω–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏—Ç—å
            //   child: Text('!!! addPlacesList: POST [/place]'),
            //   onPressed: () async {
            //     await _placeRepository.addPlacesList(dataPlacesList);
            //   },
            //   style: TextButton.styleFrom(
            //     primary: Colors.white,
            //     backgroundColor: Color(0xff49CC90),
            //     minimumSize: Size(300, 48),
            //   ),
            // ),
            // sizedBoxH24,
            TextButton(
              child: Text('–í—Å–µ –º–µ—Å—Ç–∞ GET [/place]'),
              onPressed: () async {
                final response = await _placeRepository.getAllPlaces();
                print('UI –°–ø–∏—Å–æ–∫ –º–µ—Å—Ç (${response.length} —à—Ç.): $response');
              },
              style: TextButton.styleFrom(
                primary: Colors.white,
                backgroundColor: Color(0xff60AFFE),
                minimumSize: Size(300, 48),
              ),
            ),
            sizedBoxH8,
            TextButton(
              child: Text('–ú–µ—Å—Ç–æ –ø–æ ID GET [/place/{$_testId}]'),
              onPressed: () async {
                final response = await _placeRepository.getPlaceDetail(_testId);
                print('UI –ú–µ—Å—Ç–æ: $response');
              },
              style: TextButton.styleFrom(
                primary: Colors.white,
                backgroundColor: Color(0xff60AFFE),
                minimumSize: Size(300, 48),
              ),
            ),
            sizedBoxH24,
            TextButton(
              child: Text('DELETE [/place/{$_testId}]'),
              onPressed: () async {
                await _placeRepository.removePlace(_testId);
              },
              style: TextButton.styleFrom(
                primary: Colors.white,
                backgroundColor: Color(0xffF93E3F),
                minimumSize: Size(300, 48),
              ),
            ),
            sizedBoxH8,
            TextButton(
              child: Text('–û–±–Ω–æ–≤–∏—Ç—å PUT [/place/{$_testId}]'),
              onPressed: () async {
                await _placeRepository.updatePlace(_testUpdate);
              },
              style: TextButton.styleFrom(
                primary: Colors.white,
                backgroundColor: Color(0xffFCA131),
                minimumSize: Size(300, 48),
              ),
            ),
            sizedBoxH8,
          ],
        ),
      ),
      bottomNavigationBar: MainBottomNavigationBar(
        current: 1,
      ),
    );
  }
}
